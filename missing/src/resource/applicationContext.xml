<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
           http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<!-- 读取配置参数 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:resource/jdbc.properties</value>
			</list>
		</property>
	</bean>
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="autoCommitOnClose" value="true" />
		<property name="checkoutTimeout" value="${cpool.checkoutTimeout}" />
		<!--初始化时获取连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="${cpool.minPoolSize}" />
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="${cpool.minPoolSize}" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="${cpool.maxPoolSize}" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="${cpool.maxIdleTime}" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="${cpool.acquireIncrement}" />
		<property name="acquireRetryAttempts"  value="${cpool.acquireRetryAttempts}" />
        <property name="acquireRetryDelay"   value="${cpool.acquireRetryDelay}"/>
        <property name="breakAfterAcquireFailure" value="${cpool.breakAfterAcquireFailure}"/>
        <property name="maxStatements" value="${cpool.maxStatements}"/>
		<property name="maxIdleTimeExcessConnections" value="${cpool.maxIdleTimeExcessConnections}" />
		<property name="idleConnectionTestPeriod" value="${cpool.idleConnectionTestPeriod}" />
		<property name="testConnectionOnCheckin" value="${cpool.testConnectionOnCheckin}" />
		<property name="testConnectionOnCheckout" value="${cpool.testConnectionOnCheckout}" />
		<property name="preferredTestQuery" value="${cpool.preferredTestQuery}" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingLocations">
			<list>
				<value>classpath*:/happylife/model/hbm/TbAdmin.hbm.xml</value>
				<value>classpath*:/happylife/model/hbm/TbMch.hbm.xml</value>
				<value>classpath*:/happylife/model/hbm/TbMchStaff.hbm.xml</value>
				<value>classpath*:/happylife/model/hbm/TbProduct.hbm.xml</value>
				<value>classpath*:/happylife/model/hbm/TbRedeemCode.hbm.xml</value>
				<value>classpath*:/happylife/model/hbm/TbTransactionRecord.hbm.xml</value>
				<value>classpath*:/happylife/model/hbm/TbWechatMsg.hbm.xml</value>
				<value>classpath*:/happylife/model/hbm/TbWechatUser.hbm.xml</value>
				<value>classpath*:/happylife/model/hbm/TbActivity.hbm.xml</value>
				<value>classpath*:/happylife/model/hbm/TbSuggestion.hbm.xml</value>				
				<value>classpath*:/happylife/model/hbm/TbServiceEvaluate.hbm.xml</value>
				<value>classpath*:/happylife/model/hbm/TbQueueRecord.hbm.xml </value>
				<value>classpath*:/happylife/model/hbm/TbProductActivityRecord.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
				hibernate.show_sql=false
				hibernate.format_sql=false
				hibernate.query.substitutions=true 1, false 0
				hibernate.jdbc.batch_size=20
				hibernate.cache.use_query_cache=false
			</value>
		</property>
	</bean>
	<bean id="daoTemplate" abstract="true" lazy-init="true" p:sessionFactory-ref="sessionFactory"/>
    <bean id="genericDao" class="happylife.dao.impl.GenericDaoImpl" parent="daoTemplate"></bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<context:annotation-config />
	<context:component-scan base-package="happylife.service.impl"/>
	<tx:annotation-driven />

	<!-- 配置事务增强处理Bean,指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 用于配置详细的事务语义 -->
		<tx:attributes>
			<!-- 所有以'get'开头的方法是read-only的 -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="imoenPointcut"
			expression="execution(* happylife.service.impl.*.*(..))" />
		<!-- 指定在imoenPointcut切入点应用txAdvice事务增强处理 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="imoenPointcut" />
	</aop:config>

	<!-- 对注解事务的支持 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!--	 定义我们要运行的类 -->
	<bean id="ProductAndMchTimer" class="happylife.timer.ProductAndMchInfoTimer" />  
<!--	 引用，配置要运行的方法 -->
	<bean id="ProductAndMchTimerDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="ProductAndMchTimer" />
		</property>
		<property name="targetMethod">
			<value>run</value>
		</property>
	</bean>

    <!--  	 引用，定制调用间隔，具体时间配置的正则，请阅读readme.txt   -->
	<bean id="ProductAndMchTimerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="ProductAndMchTimerDetail" />
		</property>
		<property name="cronExpression">
			<value>0 0/30 * * * ?</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="ProductAndMchTimerTrigger" />
			</list>
		</property>
	</bean>
	
</beans>

